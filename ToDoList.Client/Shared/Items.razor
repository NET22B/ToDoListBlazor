@inject IToDoClient ToDoClient

<div class="container">
    <ul id="toDoItems" class="list-group align-self-sm-stretch mt-4">
        @foreach (var item in ToDoItems)
        {

            <li @onclick="() => ItemCompleted(item)" class="list-group-item @(item.Completed ? "change" : "")">
                @item.Text
                <button @onclick="() => Remove(item)" @onclick:stopPropagation="true" class="btn btn-danger">X</button>
            </li>
        }
    </ul>
</div>

@code {
    [Parameter]
    public List<Item> ToDoItems { get; set; } = new List<Item>();

    private void ItemCompleted(Item item)
    {
        item.Completed = item.Completed ? false : true;

        //ToDo call api
        //Act on success
    }

    private async void Remove(Item item)
    {

        var isRemoved = await ToDoClient.RemoveAsync(item.Id);

        if (isRemoved)
        {
            ToDoItems.Remove(item);
            StateHasChanged();

        }
    }

}
